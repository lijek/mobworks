buildscript {
	repositories {
		maven {
			name = "Fabric"
			url = "https://maven.fabricmc.net/"
		}
		gradlePluginPortal()
		mavenCentral()
		jcenter()
		maven {
			name = "Jitpack"
			url 'https://jitpack.io/'
		}
	}
	dependencies {
		classpath 'com.github.Chocohead:Fabric-Loom:66ed9fe'
	}
}

plugins {
	id 'maven-publish'
}

apply plugin: "fabric-loom"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

idea {
	module {
		downloadJavadoc = true
	}
}

eclipse {
	classpath {
		downloadJavadoc = true
	}
}

repositories {
	maven {
		name = "Jitpack"
		url "https://jitpack.io/"
	}
	//maven { url "https://maven.glass-launcher.net/repo" }
}

minecraft {
}

dependencies {
	// fabric loader requires log4j, guava, and gson
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
	annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1'
	annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
	implementation 'com.google.guava:guava:28.0-jre'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

	// mixin and fabric loader need asm 9
	implementation 'org.ow2.asm:asm:9.0'
	implementation 'org.ow2.asm:asm-analysis:9.0'
	implementation 'org.ow2.asm:asm-commons:9.0'
	implementation 'org.ow2.asm:asm-tree:9.0'
	implementation 'org.ow2.asm:asm-util:9.0'

	implementation "com.github.jhalterman:typetools:87240d6"
	implementation "com.github.mineLdiver:expressions:2fa66db"
	implementation "com.github.mineLdiver:UnsafeEvents:7efec57"

	// to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings loom.fromCommit("calmilamsy/BIN-Mappings", "${project.yarn_mappings}") { spec ->
		spec.version = "b1.7.3-${project.yarn_mappings}"
	}

	// convenience stuff
	// adds some useful annotations for data classes. does not add any dependencies
	compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'

	// adds some useful annotations for miscellaneous uses. does not add any dependencies, though people without the lib will be missing some useful context hints.
	compile 'org.jetbrains:annotations:16.0.2'

	modImplementation "com.github.minecraft-cursed-legacy:cursed-fabric-loader:${project.loader_version}"
	//modImplementation "net.modificationstation:StationLoader:1.3.1:dev"

	def urlFile = { url, name ->
		File file = new File("$buildDir/download/${name}.jar")
		file.parentFile.mkdirs()
		if (!file.exists()) {
			new URL(url).withInputStream { downloadStream ->
				file.withOutputStream { fileOut ->
					fileOut << downloadStream
				}
			}
		}
		files(file.absolutePath)
	}
	modImplementation 'com.github.lijek:StationAPI:b275c55'
	modImplementation 'com.github.lijek:Creative-b1.7.3:5430b39'
	//modImplementation urlFile("https://github.com/lijek/Creative-b1.7.3/releases/download/2.0.1/creative-2.0.1-dev.jar", "Creative")
	//modImplementation urlFile("https://github.com/ModificationStation/StationAPI/releases/download/2.0-PRE1/StationAPI-2.0-PRE1-dev.jar", "StationAPI")
	//compile urlFile("https://github.com/ModificationStation/StationAPI/releases/download/2.0-PRE1/StationAPI-2.0-PRE1-javadoc.jar", "StationAPIJavadoc")
	//compile urlFile("http://glass-launcher.net:8080/job/StationAPI/lastSuccessfulBuild/artifact/build/libs/StationAPI-2.0-PRE1-dev.jar", "StationAPI")
	compile fileTree(dir: 'libs', include: ['*.jar'])

}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
	from javadoc
	classifier = 'javadoc'
}

tasks.publishToMavenLocal.dependsOn(tasks.remapJar)

publishing {
	repositories {
		mavenLocal()
	}

	publications {
		mavenJava(MavenPublication) {
			artifactId project.archives_base_name
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") {
				classifier null
				builtBy remapJar
			}

			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") {
				classifier 'dev'
				builtBy remapJar
			}
		}
	}
}
